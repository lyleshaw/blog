<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Lyle&#39;s Blog</title>
    <link>https://lyleshaw.com/</link>
    <description>Recent content on Lyle&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
    <lastBuildDate>Tue, 20 Oct 2020 14:09:21 +0800</lastBuildDate><atom:link href="https://lyleshaw.com/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>微信机器人踩坑记录</title>
      <link>https://lyleshaw.com/tech/wechat-bot/</link>
      <pubDate>Tue, 20 Oct 2020 14:09:21 +0800</pubDate>
      
      <guid>https://lyleshaw.com/tech/wechat-bot/</guid>
      <description>本文首发于https://lyleshaw.com/tech/wechat-bot/
最近接了个做微信社群运营机器人的单，本来以为很简单框架很多来着，结果没想到断断续续搞了小两个星期，写篇博客记录一下踩坑的记录。
 序 首先我大致了解了一下和微信通讯的方式，主要分以下几种方式：
   方式 优点 缺点     Web微信 方便易用框架多 17年后新注册的微信无法使用Web微信   iPad/Mac协议 几乎全是优点 开发成本高，可用框架收费高   PC微信HOOK 好用，开源框架相对多 无法及时跟进微信版本，需要用固定版本微信，且实测如果微信群聊/人数太多会导致微信崩溃    想法  对于web微信的框架，包括itechat等主流框架（提一句，wechaty的web版也是开源免费的），虽然对于我本人的帐号是可以使用的，但是无奈需求方用不了，只能舍弃； 对于iPad/Mac协议，做的最好的应该是wechaty，但是呢其商用版单账号单月200R，负担不其，最初时并没有考虑，但是其实可以通过为wechaty社区贡献博客/为项目贡献来获得一年免费token（但是不支持多语言版，只能用typescript）； 于是我走向了hook微信的道路&amp;hellip;&amp;hellip;  PC微信之HOOK hook原理 PC微信HOOK是直接用工具（CE）查找微信各个数据在内存中的地址，然后通过DLL对其进行读取、修改进而达到和微信通讯的方式。
hook之一 我最早看到的是这一篇https://zhuanlan.zhihu.com/p/114214846，是一个【目前似乎是高中的？】女孩子做的，写的东西能用&amp;hellip;但是问题在于，开发者并没有太多开发经验，所以很多地方都很不规范、亦或者用一些奇怪的解决方式来搞的【但是你并不能苛求一个刚上高中的学生做的更好了】&amp;hellip;
比如说这个东西的原理在于通过hook的方式拿到微信的数据，然后把读取的数据写到sqlite数据库里，然后python文件直接读取sqlite数据库里的聊天信息&amp;hellip;
操作很迷惑，但是确实能用，只是hook和写入sqlite的过程被封装进了一个exe文件，你无法定制自己需要的数据，只能被动接收数据库中有的东西。
而数据库中存储了微信id、聊天内容、时间、群聊id等，并没有我需要的数据，最终只能放弃。
 Github地址：https://github.com/infopensource/WechatBot
 hook之二 我第二个看到的是https://zhuanlan.zhihu.com/p/118674498，看上去很nb的样子，但是我搞了很多次不知道它的token从哪里来的，甚至有人私信问也没有回，于是放弃。
如果有人搞懂了这玩意怎么用可以联系我更新。
 Github地址：https://github.com/veikai/PyWeChatSpy
 hook之三 这是我使用的最后一个hook，也是最好的一个&amp;hellip;支持两个版本的微信注入（2.8和2.9），并且同时提供了websocket协议和http协议的数据传输。
最早的时候因为客户端里python版本只提供了websocket协议版本的，我也没有仔细看文档，所以我以为它只有websocket协议的&amp;hellip;为此甚至还提前学了学ws协议（正常来讲应该是下一节计网课的内容，好吧，确实不难），然鹅走ws协议我有一些数据一直拿不到（报错或者返回null），我也不知道为什么，应该是这个框架本身的bug。
本来我都快放弃了&amp;hellip;然鹅最后看了看文档里有一句话
 请参见client.js（websocket客户端）和httpclient.js（http客户端）示例代码
 嗯？httpclient.js？？？http？？？好吧，于是我才最终意识到它还有http协议版本&amp;hellip;
于是开始重构代码，小号测试成功，准备部署到服务器，部署完成。
然后&amp;hellip;交付&amp;hellip;结果问题来了，交付时使用的他们的微信号上有几百个微信群，每个微信群有几百个成员，我猜测可能是因为同一时期对微信内存的修改次数过多，总之，这个帐号一运行微信就崩溃了，然后重启，再尝试，继续崩溃&amp;hellip;
于是看了看代码，改了一点点，仍然无效，最终只能放弃了&amp;hellip;
但是，倘若你使用的微信号并没有那个量级的请求量，我仍然觉得这是目前PC微信HOOK的最好的框架。【嗯，甚至在我写这篇博客时刚刚更新了一个fix bug的新版本，目前还没尝试】
 Github地址：https://github.com/cixingguangming55555/wechat-bot</description>
    </item>
    
    <item>
      <title>PyTorch使用指南——pytorch安装</title>
      <link>https://lyleshaw.com/tech/install-pytorch/</link>
      <pubDate>Thu, 24 Sep 2020 18:42:36 +0800</pubDate>
      
      <guid>https://lyleshaw.com/tech/install-pytorch/</guid>
      <description>本文首发于https://lyleshaw.com/tech/wechat-bot/
最近好几个朋友在问pytorch安装的问题，总结了一下，大家好像都是【超时】和【路径】问题，因此在整个系列前些个0篇，介绍pytorch安装中的各种坑
 Q0 一些小问题 有朋友首先问了我这个问题&amp;hellip;这个需要明确一个前提，即pytorch在pip中实际上并不叫pytorch，直接pip install pytorch是会报错的，应该使用官网安装命令完成安装。
Q1 超时——如何使用pip/conda镜像 其次常见的问题应该是time out，即超时错误。这是由于Torch仓库在海外，访问外网的速度会有所限制，而连接超过设定时间后即会自动终止安装，这时候就需要通过国内镜像来完成安装。
以下提供部分常用镜像地址
清华：https://pypi.tuna.tsinghua.edu.cn/simple 阿里云：http://mirrors.aliyun.com/pypi/simple/ 中国科技大学 https://pypi.mirrors.ustc.edu.cn/simple/ 豆瓣：http://pypi.douban.com/simple/ 通过我们会使用清华源或阿里源
如果您不经常使用python，仅仅为了任务而使用pytorch，那么我建议您在该次安装中使用暂时的镜像，命令为
pip install -i https://pypi.tuna.tsinghua.edu.cn/simple {Your Pack&#39;s Name} 对于Torch安装而言，则为
pip install -i https://pypi.tuna.tsinghua.edu.cn/simple torch==1.6.0+cpu torchvision==0.7.0+cpu -f https://download.pytorch.org/whl/torch_stable.html 倘若您会经常使用python，那么我建议您直接将pip安装来源永久修改为清华源，方法如下：
首先找到如下路径，{Your User Name}为您的用户名：
C:\User\{Your User Name}\pip\pip.ini 其次修改pip.ini的内容为如下内容：
[global] index-url = https://pypi.tuna.tsinghua.edu.cn/simple [install] trusted-host=mirrors.aliyun.com 一般而言，通过如上方法即可成功。
Q2 安装失败？试试CPU版 如果上述安装过程出现如下错误
那么应该是您默认安装了CUDA版本，即GPU版本
这种情况下建议您安装CPU版本，即把下图中CUDA版本选择为“None”后的命令进行安装
Q3 安装成功却无法import？路径错误 如果您出现内容，您可以直接在CMD中输入python后打出import torch内容后没有报错，那么恭喜您，pytorch已经成功安装到了您的电脑。
但是不要着急，这并不意味着您可以将pytorch在生产环境中使用。
如图：这可能是由于您安装了多个python环境（包括但不限于原生python，anaconda等），就可能会产生将Torch安装到自己也不知道哪个环境的情况，结果即如上图。
此时有三个解决方案：
1. 卸载所有环境，只保留一个环境（建议anaconda）【简单】 2. 在所有环境中全部安装一遍Torch【中等】 3. 手动调整系统环境变量中的路径，将Torch安装到自己需要的环境中【较难】  以上即是安装pytorch中的常见问题，如果有其他问题可以向我发邮件，我会在看到后回复~</description>
    </item>
    
    <item>
      <title>2020暑假总结</title>
      <link>https://lyleshaw.com/life/2020-sunmmer-vacation-summary/</link>
      <pubDate>Tue, 01 Sep 2020 21:26:13 +0800</pubDate>
      
      <guid>https://lyleshaw.com/life/2020-sunmmer-vacation-summary/</guid>
      <description>Part1 · 计划完成度  FastAPI+ORM学习，完成开发基于短信的To-Do List提醒 / 初步完成 完成《统计学习方法》与《PyTorch实战》阅读 / 完成《PyTorch实战》 完成集智数学基础课程学习 / 完成度低 盈利超过4k / 亏损 完成Vue.js+Boostrap简单应用学习，并将社交项目推进至1/10（完成后台部分开发及部分前端页面）/ 无进度  Part2 · 总结回顾 这可能是我最为颓废的一个假期，因想专心看书补基础而放弃留杭与实习选择回家，但是最终却几乎整整看了一个月的小说。
没有任何一个深入研究的方向，仅仅只是在表层的实现了todo项目的几个crud函数。
这个假期无疑是失败的。</description>
    </item>
    
    <item>
      <title>世界观之——和C的聊天记录</title>
      <link>https://lyleshaw.com/life/worldview1/</link>
      <pubDate>Wed, 19 Aug 2020 23:00:23 +0800</pubDate>
      
      <guid>https://lyleshaw.com/life/worldview1/</guid>
      <description> 因为某C朋友的好奇，聊了聊关于我的世界观，因见识与阅历存在疏漏，如有见解还望指出。截图已获对方允许。
 </description>
    </item>
    
    <item>
      <title>PyTorch使用指南——数据引入</title>
      <link>https://lyleshaw.com/tech/import-data/</link>
      <pubDate>Mon, 17 Aug 2020 22:36:36 +0800</pubDate>
      
      <guid>https://lyleshaw.com/tech/import-data/</guid>
      <description>本文首发于https://lyleshaw.com/tech/wechat-bot/
 导入包 首先来一段正常的导入包代码，我将每个包的功能注释到代码后
import torch # 引入Torch，没啥可说的 import torch.nn as nn # 引入神经网络模块，模型的定义需要用到nn.Model模块 import torch.nn.functional as F # 函数模块，包括机器学习里常用的一些计算函数 import pandas as pd #pandas，用来导入导出数据文件并做一定程度上的清洗 import numpy as np # numpy，python最好的科学计算库，常用在矩阵计算等 from torch.utils.data import * # 这个模块是数据相关的一些操作 from torch.autograd import Variable # variable函数是将tensor转化为可微分的variable类型 import torchvision # 这里面是一些计算机视觉常用的包和函数，一些 import matplotlib.pyplot as plt # plt画图用 import torch.optim as optim # 优化模块，有很多优化器，Adam、SGD等 from torch.utils.data import Dataset # 数据集操作 from torchvision import transforms, datasets, models # transforms是对数据进行totensor，归一化等等操作的包  可以根据不同任务的实际情况选择调用哪些包</description>
    </item>
    
    <item>
      <title>PyTorch使用指南</title>
      <link>https://lyleshaw.com/tech/pytorch-guide/</link>
      <pubDate>Mon, 17 Aug 2020 22:16:47 +0800</pubDate>
      
      <guid>https://lyleshaw.com/tech/pytorch-guide/</guid>
      <description>本文首发于https://lyleshaw.com/tech/wechat-bot/
 为什么我要写这些？ 这将是一个系列的长文，我希望通过撰写这些文章使得一个对深度学习原理有一定理解的人快速上手pytorch。
在深度学习建模方面的框架主要为tensorflow和pytorch，前者虽然在前些年占据优势，但是更适合工业级的部署任务，其计算图和仿佛在python里重构了一门新语言的设计非常劝退新手。相比之下，pytorch就更适合入门了。
尽管pytorch相较于tensorflow较为容易，但是因其功能的复杂性，还是很容易让新手踩坑。（是的，说的是我本人，debug de到自闭，甚至跑起来时候都不敢相信）。
这个系列会有哪些模块？ 我会分以下模块分别写文章来解释及列出常见错误原因：
 Torch安装 数据引入 数据清洗 模型设计 模型运行 模型保存&amp;amp;调用 模型优化  参考 [1.] 常用代码片段. Lyle. https://github.com/lyleshaw/Frequently-used-Python-code.
[2.] PyTorch 模型训练实用教程. 余霆嵩.</description>
    </item>
    
    <item>
      <title>2020.08.14-LeetCode刷题总结</title>
      <link>https://lyleshaw.com/tech/0814-lc/</link>
      <pubDate>Fri, 14 Aug 2020 21:10:29 +0800</pubDate>
      
      <guid>https://lyleshaw.com/tech/0814-lc/</guid>
      <description>第一篇刷题总结，内容可能不够完善。
 题目 LeetCode 72题：编辑距离
给你两个单词 word1 和 word2，请你计算出将 word1 转换成 word2 所使用的最少操作数 。 你可以对一个单词进行如下三种操作： 插入一个字符 删除一个字符 替换一个字符 示例 1： 输入：word1 = &amp;quot;horse&amp;quot;, word2 = &amp;quot;ros&amp;quot; 输出：3 解释： horse -&amp;gt; rorse (将 &#39;h&#39; 替换为 &#39;r&#39;) rorse -&amp;gt; rose (删除 &#39;r&#39;) rose -&amp;gt; ros (删除 &#39;e&#39;) 示例 2： 输入：word1 = &amp;quot;intention&amp;quot;, word2 = &amp;quot;execution&amp;quot; 输出：5 解释： intention -&amp;gt; inention (删除 &#39;t&#39;) inention -&amp;gt; enention (将 &#39;i&#39; 替换为 &#39;e&#39;) enention -&amp;gt; exention (将 &#39;n&#39; 替换为 &#39;x&#39;) exention -&amp;gt; exection (将 &#39;n&#39; 替换为 &#39;c&#39;) exection -&amp;gt; execution (插入 &#39;u&#39;) 思路 这并不是一道非常难的动态规划题。</description>
    </item>
    
    <item>
      <title>2020下半年书单记录（更新中）</title>
      <link>https://lyleshaw.com/life/the-booklist-of-the-rest-of-2020/</link>
      <pubDate>Thu, 13 Aug 2020 19:19:55 +0800</pubDate>
      
      <guid>https://lyleshaw.com/life/the-booklist-of-the-rest-of-2020/</guid>
      <description>书籍类  一百个人的十年 疯狂的投资：跨越大西洋电缆的商业传奇 民主的奇迹： 美国宪法制定的127天  论文类 </description>
    </item>
    
    <item>
      <title>为什么我需要一个博客</title>
      <link>https://lyleshaw.com/life/why-we-need-blogs/</link>
      <pubDate>Wed, 12 Aug 2020 18:53:19 +0800</pubDate>
      
      <guid>https://lyleshaw.com/life/why-we-need-blogs/</guid>
      <description>历史 最早接触建站是在2013年，当时还是初二的我斥巨资（就当时而言）买入了一个域名ycwl.pw，然后在此基础上折腾过一段时间的discuz和wordpress，甚至还帮其他人做过一些小网页赚过十几块钱。
然而当时无非是在html模版的基础上改些小地方，还记得当时那简陋的dreamwear，并没有深入去学JavaScript或PHP，期间多次想坚持写个blog，可似乎最长的一次也不过坚持了一两个月便放弃了，甚至现在连数据都丢失掉了。
大学之后，觉得闲置lyleshaw.com这个域名有些浪费，因此又重新用wordpress建了个blog，但是时隔半年却一篇产出都没有&amp;hellip;
再然后，便是现在使用hugo搭建的静态博客了。
缘由 blog本身即是作为一个表达自己看法的工具，在这一点上与知乎专栏和简书等并没有本质的区别。
而由于众所周知的国内审查环境，加之国内大部分互联网社区氛围都比较“下沉”，因此博客就成为了互联网（技术）圈的一个交流社区。
假若你对JavaScript、php都毫无了解，依然可以通过wordpress搭建自己的blog，而倘若你学习了一点点html和css，就可以依照自己的想法对theme进行定制，如若再进一层，学习了Git，便可以通过hexo与hugo等静态页面托管到github pages作为自己的blog。
blog的定位也很独特，你不会寄希望于自己的blog拥有与微信公众号、今日头条等平台同等规模的阅读+评论，但是也不会希望自己的blog只成为自己一个人的乐土。通过blog，你可以大概率的避免类似微博、今日头条等文章下的低智评论，又可以获得小圈子范围内的认可。
关于我的blog 几乎每一个建立blog的人都会希望它成为一个纯技术类的blog，但显然大部分并不能做到天天对着代码看的同时，晚上继续孜孜不倦的写技术文章，因此，生活将成为一个blog很重要的部分。
而我的blog也同样如此，我会偶尔将一些关于技术上的（不成熟的）思考写作文档放上来，同样也会将自身的一些计划&amp;amp;想法&amp;amp;经历放上。对此，我将放弃自己平时对待大部分事情尽可能希望保持中立且公正的态度，而是会加入自身的想法[若非如此，文章大概都会变成复读机了（笑）]。
同时，我欢迎各位有想法的小伙伴与我交流。然而，由于众所周知的原因，disqus在国内的稳定性并不好（并且消息推送也不及时），因此我将暂时不开放评论系统，想要交流的小伙伴可以直接向我发送邮件x@lyleshaw.com.
以上。</description>
    </item>
    
    <item>
      <title>关于</title>
      <link>https://lyleshaw.com/about/</link>
      <pubDate>Wed, 12 Aug 2020 18:52:57 +0800</pubDate>
      
      <guid>https://lyleshaw.com/about/</guid>
      <description>你好，每一个看到这个页面的人。
 About Me 我是lyle，目前某双非大二计算机在读，现居杭州。
技术栈：    语言&amp;amp;框架 介绍 掌握程度     python  较为熟练，三年经验   ············pandas 数据处理&amp;amp;清洗框架 基本掌握大部分函数   ············pytorch 深度学习建模框架 能调用中级模型，可以初步实现自定义模型   ············requests HTTP请求框架&amp;amp;爬虫 能够爬取大部分简单页面，但对多线程及登录理解不深   ············fastapi 后端开发 初步实现增删查改及orm操作，对中间件理解不深   C ··· 大部分来自大学C语言程序设计课，初步使用   pascal ··· 来自初中NOIP经历，较为熟悉   Go ··· 因社团而学习，目前能够看懂但实践较难    
兴趣点：    领域 介绍 掌握程度     机器学习 就是机器学习，好像没什么可介绍的&amp;hellip; 会建一、、模型，对原理有一、、了解，但要学习的还有很多很多（望天）   后端开发 （包括但不限于）网页的后端api开发 Orz，初步会CRUD了   复杂科学 一门关于简单规律事物涌现为复杂事物的科学 初步停留在科普往上的程度   计算神经科学 希望使用建模的方法认知神经的学科 同上   社会生物学 从生物学（主要为遗传）角度探究社会学现象的学科 同上    爱好的小说：    作者 书名 简介     刘慈欣      《三体》三部曲 待完善    《镜子》     《球状闪电》    刘宇昆      《奇点遗民》    王江山      《咒语》    马丁      《冰与火之歌》    跳舞      《恶魔法则》     《猎国》    爱潜水的乌贼      《诡秘之主》     《奥术神座》    风月      《天启预报》     《寂静王冠》     About Blog 本博客使用hugo搭建；使用hello-friend-ng模版；托管于coding；文章使用HBuilder X创作。</description>
    </item>
    
  </channel>
</rss>
